# -*- coding: utf-8 -*-
"""wisconsin-breast-cancer-prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Gb1hOLkQS_4jXAZ2jeqTCY-kYA0CWHdi

# **0. Import Necessary Libraries**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""# **1. Load Dataset**"""

from sklearn.datasets import load_breast_cancer

data = load_breast_cancer(as_frame=True).frame

"""# **2. Data Understanding**

## **2.0. Display Dataset's First Five Rows**
"""

data.head()

"""## **2.1. Display Dataset's Last Five Rows**"""

data.tail()

"""## **2.2. Display Dataset's Basic Information**"""

data.info()

"""## **2.3. Target Variable Mapping**"""

data['target'] = data['target'].map({
    0: 'malignant',
    1: 'benign'
})

"""# **3. Exploratory Data Analysis**

## **3.0. Display Dataset's Statistics Information**
"""

data.describe()

"""## **3.1. Display Dataset's Column Distribution Data**"""

sns.set_style('darkgrid')

for column in data.columns:
    plt.figure(figsize=(16, 12))
    sns.histplot(data=data, x=data[column], kde=True)
    plt.title(f'Column of {column}')
    plt.show()

"""## **3.2. Display Target Variable's Countplot**"""

plt.figure(figsize=(16, 12))
sns.countplot(data=data, x=data['target'])
plt.title('Countplot of target')
plt.show()

"""# **4. Model Building**

## **4.0. Data Splitting**
"""

from sklearn.model_selection import train_test_split

X = data.drop('target', axis=1)
y = data['target']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""## **4.1. Model Development**"""

from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

model = LogisticRegression()
model.fit(X_train, y_train)

y_train_pred = model.predict(X_train)
y_test_pred = model.predict(X_test)

training_accuracy = accuracy_score(y_train, y_train_pred)
testing_accuracy = accuracy_score(y_test, y_test_pred)

print(f'Training Set Accuracy: {training_accuracy * 100:.2f}%')
print(f'Testing Set Accuracy: {testing_accuracy * 100:.2f}%\n')

training_report = classification_report(y_train, y_train_pred)
testing_report = classification_report(y_test, y_test_pred)

print(f'Training Set Report:\n{training_report}\n')
print(f'Testing Set Report:\n{testing_report}')

"""## **5.2. Save Model into Joblib File**"""

import joblib

filename = 'wisconsin-model.joblib'
joblib.dump(model, filename)